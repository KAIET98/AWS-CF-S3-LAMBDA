#  Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
#  the License. A copy of the License is located at
#      http://aws.amazon.com/apache2.0/
#  or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
#  CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and
#  limitations under the License.

AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  Environment:
    Type: String
    
    AllowedValues:
      - dev
    #  - stage
    #  - prod

  
  ProjectName:
    Description: ocs-prueba
    Type: String
    Default: ocs-lambda-kaiet
  S3Bucket:
    Description: ocs-bucket-prueba
    Type: String
    Default: ocs-kaiet

  
  #Creamos un repositorio en github donde hostear el c칩digo y adem치s le ponemos la rama principal que es
  #la de "producci침on" de donde leera el c칩digo
  
  
  GitHubRepoName:
    Description: The repo we're building from
    Type: String
    Default: AWS-CF-S3-LAMBDA
  GitHubBranch:
    Description: The branch we're building from
    Type: String
    Default: main
  
Mappings:
  EnvironmentsAndRoles:
    dev:
      PipelineRole: arn:aws:iam::070307590085:role/AWSCodePipelineFullAccess
      CfnDeploy: arn:aws:iam::070307590085:role/AWSCodePipelineFullAccess


Resources:
  AppPipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: "{{resolve:secretsmanager:GitHubPersonalAccesToken:SecretString:token}}"
      Filters:
        -
          JsonPath: "$.ref"
          MatchEquals: !Sub "refs/heads/${GitHubBranch}"
      TargetPipeline: !Ref Pipeline
      TargetAction: GetSource
      Name: !Sub ${AWS::StackName}
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: true
  
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: arn:aws:iam::070307590085:role/shared-CodePipelineRole
      Name: !Ref AWS::StackName
      ArtifactStore:
       Type: S3
       Location: !Ref S3Bucket

   

      Stages:
        - Name: Source
          Actions:
            - Name: GetSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: KAIET98
                Repo: !Ref GitHubRepoName
                Branch: !Ref GitHubBranch
                OAuthToken: "{{resolve:secretsmanager:GitHubPersonalAccesToken:SecretString:token}}"
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: TemplateSource
              RunOrder: 1
        

  BuildStuff:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref ProjectName
      Description: !Ref ProjectName

      ServiceRole: arn:aws:iam::070307590085:role/AWSCodeBuildAdminAccess
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: linuxContainer
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
        PrivilegedMode: True
        EnvironmentVariables:

          - Name: S3Bucket
            Value: !Ref S3Bucket
          - Name: S3BucketUsEast2
            Value: core-deployment-us-east-2-bucket-artifactbucket-ka5w8dm7s2s2

         
          - Name: STACKNAME
            Value: !Ref ProjectName
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: AWS_REGION
            Value: !Ref AWS::Region
          
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: latest
              
            pre_build:
              
            build:
              
            post_build:
              commands:
                - aws cloudformation package --template-file template.yaml --s3-bucket $S3Bucket --s3-prefix ${STACKNAME}/codebuild --output-template-file package.yaml
          artifacts:
            files:
             - package.yaml
            discard-paths: yes
